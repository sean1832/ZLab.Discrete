### YamlMime:ManagedReference
items:
- uid: ZLab.Discrete.Grids.OccupancyGrid
  commentId: T:ZLab.Discrete.Grids.OccupancyGrid
  id: OccupancyGrid
  parent: ZLab.Discrete.Grids
  children:
  - ZLab.Discrete.Grids.OccupancyGrid.#ctor(System.Numerics.Vector3,ZLab.Discrete.Geometry.BBox)
  - ZLab.Discrete.Grids.OccupancyGrid.#ctor(ZLab.Discrete.Grids.GridMeta)
  - ZLab.Discrete.Grids.OccupancyGrid.#ctor(ZLab.Discrete.Voxels.Occupancy[],System.Numerics.Vector3[],ZLab.Discrete.Grids.GridMeta)
  - ZLab.Discrete.Grids.OccupancyGrid.Clone
  - ZLab.Discrete.Grids.OccupancyGrid.CountState
  - ZLab.Discrete.Grids.OccupancyGrid.CountState(ZLab.Discrete.Voxels.Occupancy)
  - ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels
  - ZLab.Discrete.Grids.OccupancyGrid.Fill(ZLab.Discrete.Voxels.Occupancy)
  - ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel(System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy})
  - ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel(System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy},System.Nullable{System.Int32})
  - ZLab.Discrete.Grids.OccupancyGrid.GetBuffer
  - ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary(System.Boolean,System.Boolean)
  - ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(System.Boolean)
  - ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(System.Span{System.Byte},System.Boolean)
  - ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer
  - ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory
  - ZLab.Discrete.Grids.OccupancyGrid.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  - ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray(System.ReadOnlySpan{ZLab.Discrete.Voxels.Occupancy})
  - ZLab.Discrete.Grids.OccupancyGrid.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
  - ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy
  - ZLab.Discrete.Grids.OccupancyGrid.ToString
  - ZLab.Discrete.Grids.OccupancyGrid.TransformWorld(System.Numerics.Vector3)
  - ZLab.Discrete.Grids.OccupancyGrid.TransformWorld(System.Numerics.Vector3,System.Numerics.Vector3)
  langs:
  - csharp
  - vb
  name: OccupancyGrid
  nameWithType: OccupancyGrid
  fullName: ZLab.Discrete.Grids.OccupancyGrid
  type: Class
  source:
    id: OccupancyGrid
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 13
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Occupancy grid structure.
  example: []
  syntax:
    content: 'public sealed class OccupancyGrid : GridBase, IGrid<Occupancy>'
    content.vb: Public NotInheritable Class OccupancyGrid Inherits GridBase Implements IGrid(Of Occupancy)
  inheritance:
  - System.Object
  - ZLab.Discrete.Grids.GridBase
  implements:
  - ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}
  inheritedMembers:
  - ZLab.Discrete.Grids.GridBase.Meta
  - ZLab.Discrete.Grids.GridBase.Bounds
  - ZLab.Discrete.Grids.GridBase.Contains(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ZLab.Discrete.Grids.OccupancyGrid.#ctor(System.Numerics.Vector3,ZLab.Discrete.Geometry.BBox)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.#ctor(System.Numerics.Vector3,ZLab.Discrete.Geometry.BBox)
  id: '#ctor(System.Numerics.Vector3,ZLab.Discrete.Geometry.BBox)'
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: OccupancyGrid(Vector3, BBox)
  nameWithType: OccupancyGrid.OccupancyGrid(Vector3, BBox)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.OccupancyGrid(System.Numerics.Vector3, ZLab.Discrete.Geometry.BBox)
  type: Constructor
  source:
    id: .ctor
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 19
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  syntax:
    content: public OccupancyGrid(Vector3 voxelSize, BBox bounds)
    parameters:
    - id: voxelSize
      type: System.Numerics.Vector3
    - id: bounds
      type: ZLab.Discrete.Geometry.BBox
    content.vb: Public Sub New(voxelSize As Vector3, bounds As BBox)
  overload: ZLab.Discrete.Grids.OccupancyGrid.#ctor*
  nameWithType.vb: OccupancyGrid.New(Vector3, BBox)
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.New(System.Numerics.Vector3, ZLab.Discrete.Geometry.BBox)
  name.vb: New(Vector3, BBox)
- uid: ZLab.Discrete.Grids.OccupancyGrid.#ctor(ZLab.Discrete.Grids.GridMeta)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.#ctor(ZLab.Discrete.Grids.GridMeta)
  id: '#ctor(ZLab.Discrete.Grids.GridMeta)'
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: OccupancyGrid(GridMeta)
  nameWithType: OccupancyGrid.OccupancyGrid(GridMeta)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.OccupancyGrid(ZLab.Discrete.Grids.GridMeta)
  type: Constructor
  source:
    id: .ctor
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 35
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  syntax:
    content: public OccupancyGrid(GridMeta meta)
    parameters:
    - id: meta
      type: ZLab.Discrete.Grids.GridMeta
    content.vb: Public Sub New(meta As GridMeta)
  overload: ZLab.Discrete.Grids.OccupancyGrid.#ctor*
  nameWithType.vb: OccupancyGrid.New(GridMeta)
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.New(ZLab.Discrete.Grids.GridMeta)
  name.vb: New(GridMeta)
- uid: ZLab.Discrete.Grids.OccupancyGrid.#ctor(ZLab.Discrete.Voxels.Occupancy[],System.Numerics.Vector3[],ZLab.Discrete.Grids.GridMeta)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.#ctor(ZLab.Discrete.Voxels.Occupancy[],System.Numerics.Vector3[],ZLab.Discrete.Grids.GridMeta)
  id: '#ctor(ZLab.Discrete.Voxels.Occupancy[],System.Numerics.Vector3[],ZLab.Discrete.Grids.GridMeta)'
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: OccupancyGrid(Occupancy[], Vector3[], GridMeta)
  nameWithType: OccupancyGrid.OccupancyGrid(Occupancy[], Vector3[], GridMeta)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.OccupancyGrid(ZLab.Discrete.Voxels.Occupancy[], System.Numerics.Vector3[], ZLab.Discrete.Grids.GridMeta)
  type: Constructor
  source:
    id: .ctor
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 44
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  syntax:
    content: public OccupancyGrid(Occupancy[] occupancies, Vector3[] positions, GridMeta meta)
    parameters:
    - id: occupancies
      type: ZLab.Discrete.Voxels.Occupancy[]
    - id: positions
      type: System.Numerics.Vector3[]
    - id: meta
      type: ZLab.Discrete.Grids.GridMeta
    content.vb: Public Sub New(occupancies As Occupancy(), positions As Vector3(), meta As GridMeta)
  overload: ZLab.Discrete.Grids.OccupancyGrid.#ctor*
  nameWithType.vb: OccupancyGrid.New(Occupancy(), Vector3(), GridMeta)
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.New(ZLab.Discrete.Voxels.Occupancy(), System.Numerics.Vector3(), ZLab.Discrete.Grids.GridMeta)
  name.vb: New(Occupancy(), Vector3(), GridMeta)
- uid: ZLab.Discrete.Grids.OccupancyGrid.Clone
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.Clone
  id: Clone
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: OccupancyGrid.Clone()
  fullName: ZLab.Discrete.Grids.OccupancyGrid.Clone()
  type: Method
  source:
    id: Clone
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 100
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  syntax:
    content: public OccupancyGrid Clone()
    return:
      type: ZLab.Discrete.Grids.OccupancyGrid
    content.vb: Public Function Clone() As OccupancyGrid
  overload: ZLab.Discrete.Grids.OccupancyGrid.Clone*
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  id: GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: GetValue((int x, int y, int z))
  nameWithType: OccupancyGrid.GetValue((int x, int y, int z))
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetValue((int x, int y, int z))
  type: Method
  source:
    id: GetValue
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 106
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  example: []
  syntax:
    content: public Occupancy GetValue((int x, int y, int z) index)
    parameters:
    - id: index
      type: System.ValueTuple{System.Int32,System.Int32,System.Int32}
    return:
      type: ZLab.Discrete.Voxels.Occupancy
    content.vb: Public Function GetValue(index As (x As Integer, y As Integer, z As Integer)) As Occupancy
  overload: ZLab.Discrete.Grids.OccupancyGrid.GetValue*
  implements:
  - ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  nameWithType.vb: OccupancyGrid.GetValue((x As Integer, y As Integer, z As Integer))
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.GetValue((x As Integer, y As Integer, z As Integer))
  name.vb: GetValue((x As Integer, y As Integer, z As Integer))
- uid: ZLab.Discrete.Grids.OccupancyGrid.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
  id: SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: SetValue((int x, int y, int z), Occupancy)
  nameWithType: OccupancyGrid.SetValue((int x, int y, int z), Occupancy)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.SetValue((int x, int y, int z), ZLab.Discrete.Voxels.Occupancy)
  type: Method
  source:
    id: SetValue
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 117
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  example: []
  syntax:
    content: public void SetValue((int x, int y, int z) index, Occupancy value)
    parameters:
    - id: index
      type: System.ValueTuple{System.Int32,System.Int32,System.Int32}
    - id: value
      type: ZLab.Discrete.Voxels.Occupancy
    content.vb: Public Sub SetValue(index As (x As Integer, y As Integer, z As Integer), value As Occupancy)
  overload: ZLab.Discrete.Grids.OccupancyGrid.SetValue*
  implements:
  - ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
  nameWithType.vb: OccupancyGrid.SetValue((x As Integer, y As Integer, z As Integer), Occupancy)
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.SetValue((x As Integer, y As Integer, z As Integer), ZLab.Discrete.Voxels.Occupancy)
  name.vb: SetValue((x As Integer, y As Integer, z As Integer), Occupancy)
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer
  id: GetReadOnlyBuffer
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: GetReadOnlyBuffer()
  nameWithType: OccupancyGrid.GetReadOnlyBuffer()
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer()
  type: Method
  source:
    id: GetReadOnlyBuffer
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 130
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Get a read-only span over the internal occupancy buffer.
  example: []
  syntax:
    content: public ReadOnlySpan<Occupancy> GetReadOnlyBuffer()
    return:
      type: System.ReadOnlySpan{ZLab.Discrete.Voxels.Occupancy}
    content.vb: Public Function GetReadOnlyBuffer() As ReadOnlySpan(Of Occupancy)
  overload: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer*
  implements:
  - ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyBuffer
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory
  id: GetReadOnlyMemory
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: GetReadOnlyMemory()
  nameWithType: OccupancyGrid.GetReadOnlyMemory()
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory()
  type: Method
  source:
    id: GetReadOnlyMemory
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 135
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Get a read-only memory over the internal occupancy buffer.
  example: []
  syntax:
    content: public ReadOnlyMemory<Occupancy> GetReadOnlyMemory()
    return:
      type: System.ReadOnlyMemory{ZLab.Discrete.Voxels.Occupancy}
    content.vb: Public Function GetReadOnlyMemory() As ReadOnlyMemory(Of Occupancy)
  overload: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory*
  implements:
  - ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyMemory
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetBuffer
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.GetBuffer
  id: GetBuffer
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: GetBuffer()
  nameWithType: OccupancyGrid.GetBuffer()
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetBuffer()
  type: Method
  source:
    id: GetBuffer
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 140
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Get a writable span over the internal occupancy buffer.
  example: []
  syntax:
    content: public Span<Occupancy> GetBuffer()
    return:
      type: System.Span{ZLab.Discrete.Voxels.Occupancy}
    content.vb: Public Function GetBuffer() As Span(Of Occupancy)
  overload: ZLab.Discrete.Grids.OccupancyGrid.GetBuffer*
  implements:
  - ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetBuffer
- uid: ZLab.Discrete.Grids.OccupancyGrid.Fill(ZLab.Discrete.Voxels.Occupancy)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.Fill(ZLab.Discrete.Voxels.Occupancy)
  id: Fill(ZLab.Discrete.Voxels.Occupancy)
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: Fill(Occupancy)
  nameWithType: OccupancyGrid.Fill(Occupancy)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.Fill(ZLab.Discrete.Voxels.Occupancy)
  type: Method
  source:
    id: Fill
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 149
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  syntax:
    content: public void Fill(Occupancy value)
    parameters:
    - id: value
      type: ZLab.Discrete.Voxels.Occupancy
    content.vb: Public Sub Fill(value As Occupancy)
  overload: ZLab.Discrete.Grids.OccupancyGrid.Fill*
- uid: ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray(System.ReadOnlySpan{ZLab.Discrete.Voxels.Occupancy})
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray(System.ReadOnlySpan{ZLab.Discrete.Voxels.Occupancy})
  id: LoadFromArray(System.ReadOnlySpan{ZLab.Discrete.Voxels.Occupancy})
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: LoadFromArray(ReadOnlySpan<Occupancy>)
  nameWithType: OccupancyGrid.LoadFromArray(ReadOnlySpan<Occupancy>)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray(System.ReadOnlySpan<ZLab.Discrete.Voxels.Occupancy>)
  type: Method
  source:
    id: LoadFromArray
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 153
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  syntax:
    content: public void LoadFromArray(ReadOnlySpan<Occupancy> values)
    parameters:
    - id: values
      type: System.ReadOnlySpan{ZLab.Discrete.Voxels.Occupancy}
    content.vb: Public Sub LoadFromArray(values As ReadOnlySpan(Of Occupancy))
  overload: ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray*
  nameWithType.vb: OccupancyGrid.LoadFromArray(ReadOnlySpan(Of Occupancy))
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray(System.ReadOnlySpan(Of ZLab.Discrete.Voxels.Occupancy))
  name.vb: LoadFromArray(ReadOnlySpan(Of Occupancy))
- uid: ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy
  id: ToArrayCopy
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: ToArrayCopy()
  nameWithType: OccupancyGrid.ToArrayCopy()
  fullName: ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy()
  type: Method
  source:
    id: ToArrayCopy
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 163
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Export distances as a copy (flat row-major array).
  example: []
  syntax:
    content: public float[] ToArrayCopy()
    return:
      type: System.Single[]
    content.vb: Public Function ToArrayCopy() As Single()
  overload: ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy*
- uid: ZLab.Discrete.Grids.OccupancyGrid.ToString
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.ToString
  id: ToString
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: OccupancyGrid.ToString()
  fullName: ZLab.Discrete.Grids.OccupancyGrid.ToString()
  type: Method
  source:
    id: ToString
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 173
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: ZLab.Discrete.Grids.OccupancyGrid.ToString*
- uid: ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels
  id: EnumerateVoxels
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: EnumerateVoxels()
  nameWithType: OccupancyGrid.EnumerateVoxels()
  fullName: ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels()
  type: Method
  source:
    id: EnumerateVoxels
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 192
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Enumerate all voxels with their world-space positions and occupancy values.
  remarks: >-
    Examples:

    <pre><code class="lang-csharp">foreach (var (pos, occ) in grid.EnumerateVoxels())

    {
        // process pos and occ
    }</code></pre>
  example: []
  syntax:
    content: >-
      [Obsolete("Use ForEachVoxel or ForEachVoxelParallel instead for better performance.")]

      public IEnumerable<(Vector3 position, Occupancy value)> EnumerateVoxels()
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}}
      description: sequence of (position, occupancy) tuples
    content.vb: >-
      <Obsolete("Use ForEachVoxel or ForEachVoxelParallel instead for better performance.")>

      Public Function EnumerateVoxels() As IEnumerable(Of (position As Vector3, value As Occupancy))
  overload: ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ForEachVoxel or ForEachVoxelParallel instead for better performance.
- uid: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel(System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy})
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel(System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy})
  id: ForEachVoxel(System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy})
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: ForEachVoxel(Action<Vector3, Occupancy>)
  nameWithType: OccupancyGrid.ForEachVoxel(Action<Vector3, Occupancy>)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel(System.Action<System.Numerics.Vector3, ZLab.Discrete.Voxels.Occupancy>)
  type: Method
  source:
    id: ForEachVoxel
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 203
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Enumerate all voxels in the grid, invoking the given <code class="paramref">action</code> for each voxel.
  remarks: <pre><code class="lang-csharp">grid.ForEachVoxel((pos, val) =&gt; {/* ... */});</code></pre>
  example: []
  syntax:
    content: public void ForEachVoxel(Action<Vector3, Occupancy> action)
    parameters:
    - id: action
      type: System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}
      description: Action to invoke for each voxel, with parameters (position, value)
    content.vb: Public Sub ForEachVoxel(action As Action(Of Vector3, Occupancy))
  overload: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel*
  nameWithType.vb: OccupancyGrid.ForEachVoxel(Action(Of Vector3, Occupancy))
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel(System.Action(Of System.Numerics.Vector3, ZLab.Discrete.Voxels.Occupancy))
  name.vb: ForEachVoxel(Action(Of Vector3, Occupancy))
- uid: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel(System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy},System.Nullable{System.Int32})
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel(System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy},System.Nullable{System.Int32})
  id: ForEachVoxelParallel(System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy},System.Nullable{System.Int32})
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: ForEachVoxelParallel(Action<Vector3, Occupancy>, int?)
  nameWithType: OccupancyGrid.ForEachVoxelParallel(Action<Vector3, Occupancy>, int?)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel(System.Action<System.Numerics.Vector3, ZLab.Discrete.Voxels.Occupancy>, int?)
  type: Method
  source:
    id: ForEachVoxelParallel
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 215
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: >-
    Parallel z-slice enumeration. Use only if the work done in <code class="paramref">action</code>

    is heavy enough to justify the parallel overhead.
  remarks: '<pre><code class="lang-csharp">grid.ForEachVoxelParallel((pos, val) =&gt; { /* heavy work per voxel */ }, maxDegree: Environment.ProcessorCount);</code></pre>'
  example: []
  syntax:
    content: public void ForEachVoxelParallel(Action<Vector3, Occupancy> action, int? maxDegree = null)
    parameters:
    - id: action
      type: System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}
      description: Action to invoke for each voxel, with parameters (position, value)
    - id: maxDegree
      type: System.Nullable{System.Int32}
      description: Max degree of parallelism. Default (null) lets the system decide.
    content.vb: Public Sub ForEachVoxelParallel(action As Action(Of Vector3, Occupancy), maxDegree As Integer? = Nothing)
  overload: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel*
  nameWithType.vb: OccupancyGrid.ForEachVoxelParallel(Action(Of Vector3, Occupancy), Integer?)
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel(System.Action(Of System.Numerics.Vector3, ZLab.Discrete.Voxels.Occupancy), Integer?)
  name.vb: ForEachVoxelParallel(Action(Of Vector3, Occupancy), Integer?)
- uid: ZLab.Discrete.Grids.OccupancyGrid.CountState(ZLab.Discrete.Voxels.Occupancy)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.CountState(ZLab.Discrete.Voxels.Occupancy)
  id: CountState(ZLab.Discrete.Voxels.Occupancy)
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: CountState(Occupancy)
  nameWithType: OccupancyGrid.CountState(Occupancy)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.CountState(ZLab.Discrete.Voxels.Occupancy)
  type: Method
  source:
    id: CountState
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 225
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Count voxels in a given <xref href="ZLab.Discrete.Voxels.Occupancy" data-throw-if-not-resolved="false"></xref> state.
  example: []
  syntax:
    content: public long CountState(Occupancy state)
    parameters:
    - id: state
      type: ZLab.Discrete.Voxels.Occupancy
      description: state of occupancy to count
    return:
      type: System.Int64
    content.vb: Public Function CountState(state As Occupancy) As Long
  overload: ZLab.Discrete.Grids.OccupancyGrid.CountState*
- uid: ZLab.Discrete.Grids.OccupancyGrid.CountState
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.CountState
  id: CountState
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: CountState()
  nameWithType: OccupancyGrid.CountState()
  fullName: ZLab.Discrete.Grids.OccupancyGrid.CountState()
  type: Method
  source:
    id: CountState
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 233
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Count total number of voxels in the grid.
  example: []
  syntax:
    content: public long CountState()
    return:
      type: System.Int64
    content.vb: Public Function CountState() As Long
  overload: ZLab.Discrete.Grids.OccupancyGrid.CountState*
- uid: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld(System.Numerics.Vector3)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.TransformWorld(System.Numerics.Vector3)
  id: TransformWorld(System.Numerics.Vector3)
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: TransformWorld(Vector3)
  nameWithType: OccupancyGrid.TransformWorld(Vector3)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld(System.Numerics.Vector3)
  type: Method
  source:
    id: TransformWorld
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 245
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: >-
    Translates the grid by a world-space vector.

    Internally shifts content by the nearest integer voxel offset. Cells shifting out of range are dropped.
  example: []
  syntax:
    content: public void TransformWorld(Vector3 translation)
    parameters:
    - id: translation
      type: System.Numerics.Vector3
      description: World-space translation.
    content.vb: Public Sub TransformWorld(translation As Vector3)
  overload: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld*
- uid: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld(System.Numerics.Vector3,System.Numerics.Vector3)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.TransformWorld(System.Numerics.Vector3,System.Numerics.Vector3)
  id: TransformWorld(System.Numerics.Vector3,System.Numerics.Vector3)
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: TransformWorld(Vector3, Vector3)
  nameWithType: OccupancyGrid.TransformWorld(Vector3, Vector3)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld(System.Numerics.Vector3, System.Numerics.Vector3)
  type: Method
  source:
    id: TransformWorld
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 308
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: >-
    Translates the grid so that <code class="paramref">origin</code> moves to <code class="paramref">target</code>.

    Equivalent to <code>TransformWorld(target - origin)</code>.
  example: []
  syntax:
    content: public void TransformWorld(Vector3 origin, Vector3 target)
    parameters:
    - id: origin
      type: System.Numerics.Vector3
      description: World-space origin point.
    - id: target
      type: System.Numerics.Vector3
      description: World-space target point.
    content.vb: Public Sub TransformWorld(origin As Vector3, target As Vector3)
  overload: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld*
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(System.Boolean)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(System.Boolean)
  id: GetMaskTernary(System.Boolean)
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: GetMaskTernary(bool)
  nameWithType: OccupancyGrid.GetMaskTernary(bool)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(bool)
  type: Method
  source:
    id: GetMaskTernary
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 318
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Export occupancy as a ternary mask.
  example: []
  syntax:
    content: public byte[] GetMaskTernary(bool flipSign = false)
    parameters:
    - id: flipSign
      type: System.Boolean
      description: flip outside and inside
    return:
      type: System.Byte[]
      description: (0=outside, 1=inside, 2=boundary)
    content.vb: Public Function GetMaskTernary(flipSign As Boolean = False) As Byte()
  overload: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary*
  nameWithType.vb: OccupancyGrid.GetMaskTernary(Boolean)
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(Boolean)
  name.vb: GetMaskTernary(Boolean)
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(System.Span{System.Byte},System.Boolean)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(System.Span{System.Byte},System.Boolean)
  id: GetMaskTernary(System.Span{System.Byte},System.Boolean)
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: GetMaskTernary(Span<byte>, bool)
  nameWithType: OccupancyGrid.GetMaskTernary(Span<byte>, bool)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(System.Span<byte>, bool)
  type: Method
  source:
    id: GetMaskTernary
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 352
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Export occupancy as a ternary mask into a provided span.
  remarks: >-
    Example:

    <pre><code class="lang-csharp">byte[] buf = ArrayPool.Shared.Rent(gridSize);

    grid.GetMaskTernary(buf.AsSpan());</code></pre>
  example: []
  syntax:
    content: public void GetMaskTernary(Span<byte> destination, bool flipSign = false)
    parameters:
    - id: destination
      type: System.Span{System.Byte}
      description: destination span (length must be at least Nx*Ny*Nz)
    - id: flipSign
      type: System.Boolean
      description: flip outside and inside
    content.vb: Public Sub GetMaskTernary(destination As Span(Of Byte), flipSign As Boolean = False)
  overload: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: if destination span is too small
  nameWithType.vb: OccupancyGrid.GetMaskTernary(Span(Of Byte), Boolean)
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary(System.Span(Of Byte), Boolean)
  name.vb: GetMaskTernary(Span(Of Byte), Boolean)
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary(System.Boolean,System.Boolean)
  commentId: M:ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary(System.Boolean,System.Boolean)
  id: GetMaskBinary(System.Boolean,System.Boolean)
  parent: ZLab.Discrete.Grids.OccupancyGrid
  langs:
  - csharp
  - vb
  name: GetMaskBinary(bool, bool)
  nameWithType: OccupancyGrid.GetMaskBinary(bool, bool)
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary(bool, bool)
  type: Method
  source:
    id: GetMaskBinary
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Grids\OccupancyGrid.cs
    startLine: 379
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Grids
  summary: Export occupancy as a binary mask.
  example: []
  syntax:
    content: public byte[] GetMaskBinary(bool flipSign = false, bool boundaryAsInside = false)
    parameters:
    - id: flipSign
      type: System.Boolean
      description: flip outside and inside
    - id: boundaryAsInside
      type: System.Boolean
      description: treat boundary as inside?
    return:
      type: System.Byte[]
      description: (0=outside, 1=inside)
    content.vb: Public Function GetMaskBinary(flipSign As Boolean = False, boundaryAsInside As Boolean = False) As Byte()
  overload: ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary*
  nameWithType.vb: OccupancyGrid.GetMaskBinary(Boolean, Boolean)
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary(Boolean, Boolean)
  name.vb: GetMaskBinary(Boolean, Boolean)
references:
- uid: ZLab.Discrete.Grids
  commentId: N:ZLab.Discrete.Grids
  href: ZLab.html
  name: ZLab.Discrete.Grids
  nameWithType: ZLab.Discrete.Grids
  fullName: ZLab.Discrete.Grids
  spec.csharp:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Grids
    name: Grids
    href: ZLab.Discrete.Grids.html
  spec.vb:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Grids
    name: Grids
    href: ZLab.Discrete.Grids.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ZLab.Discrete.Grids.GridBase
  commentId: T:ZLab.Discrete.Grids.GridBase
  parent: ZLab.Discrete.Grids
  href: ZLab.Discrete.Grids.GridBase.html
  name: GridBase
  nameWithType: GridBase
  fullName: ZLab.Discrete.Grids.GridBase
- uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}
  commentId: T:ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}
  parent: ZLab.Discrete.Grids.Interfaces
  definition: ZLab.Discrete.Grids.Interfaces.IGrid`1
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.html
  name: IGrid<Occupancy>
  nameWithType: IGrid<Occupancy>
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<ZLab.Discrete.Voxels.Occupancy>
  nameWithType.vb: IGrid(Of Occupancy)
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of ZLab.Discrete.Voxels.Occupancy)
  name.vb: IGrid(Of Occupancy)
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1
    name: IGrid
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.html
  - name: <
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: '>'
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1
    name: IGrid
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: )
- uid: ZLab.Discrete.Grids.GridBase.Meta
  commentId: P:ZLab.Discrete.Grids.GridBase.Meta
  parent: ZLab.Discrete.Grids.GridBase
  href: ZLab.Discrete.Grids.GridBase.Meta.html#ZLab_Discrete_Grids_GridBase_Meta
  name: Meta
  nameWithType: GridBase.Meta
  fullName: ZLab.Discrete.Grids.GridBase.Meta
- uid: ZLab.Discrete.Grids.GridBase.Bounds
  commentId: P:ZLab.Discrete.Grids.GridBase.Bounds
  parent: ZLab.Discrete.Grids.GridBase
  href: ZLab.Discrete.Grids.GridBase.Bounds.html#ZLab_Discrete_Grids_GridBase_Bounds
  name: Bounds
  nameWithType: GridBase.Bounds
  fullName: ZLab.Discrete.Grids.GridBase.Bounds
- uid: ZLab.Discrete.Grids.GridBase.Contains(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  commentId: M:ZLab.Discrete.Grids.GridBase.Contains(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  parent: ZLab.Discrete.Grids.GridBase
  isExternal: true
  href: ZLab.Discrete.Grids.GridBase.Contains.html#ZLab_Discrete_Grids_GridBase_Contains_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  name: Contains((int x, int y, int z))
  nameWithType: GridBase.Contains((int x, int y, int z))
  fullName: ZLab.Discrete.Grids.GridBase.Contains((int x, int y, int z))
  nameWithType.vb: GridBase.Contains((x As Integer, y As Integer, z As Integer))
  fullName.vb: ZLab.Discrete.Grids.GridBase.Contains((x As Integer, y As Integer, z As Integer))
  name.vb: Contains((x As Integer, y As Integer, z As Integer))
  spec.csharp:
  - uid: ZLab.Discrete.Grids.GridBase.Contains(System.ValueTuple{System.Int32,System.Int32,System.Int32})
    name: Contains
    href: ZLab.Discrete.Grids.GridBase.Contains.html#ZLab_Discrete_Grids_GridBase_Contains_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  - name: (
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: )
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.GridBase.Contains(System.ValueTuple{System.Int32,System.Int32,System.Int32})
    name: Contains
    href: ZLab.Discrete.Grids.GridBase.Contains.html#ZLab_Discrete_Grids_GridBase_Contains_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  - name: (
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ZLab.Discrete.Grids.Interfaces.IGrid`1
  commentId: T:ZLab.Discrete.Grids.Interfaces.IGrid`1
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.html
  name: IGrid<T>
  nameWithType: IGrid<T>
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<T>
  nameWithType.vb: IGrid(Of T)
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of T)
  name.vb: IGrid(Of T)
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1
    name: IGrid
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1
    name: IGrid
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ZLab.Discrete.Grids.Interfaces
  commentId: N:ZLab.Discrete.Grids.Interfaces
  href: ZLab.html
  name: ZLab.Discrete.Grids.Interfaces
  nameWithType: ZLab.Discrete.Grids.Interfaces
  fullName: ZLab.Discrete.Grids.Interfaces
  spec.csharp:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Grids
    name: Grids
    href: ZLab.Discrete.Grids.html
  - name: .
  - uid: ZLab.Discrete.Grids.Interfaces
    name: Interfaces
    href: ZLab.Discrete.Grids.Interfaces.html
  spec.vb:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Grids
    name: Grids
    href: ZLab.Discrete.Grids.html
  - name: .
  - uid: ZLab.Discrete.Grids.Interfaces
    name: Interfaces
    href: ZLab.Discrete.Grids.Interfaces.html
- uid: ZLab.Discrete.Grids.OccupancyGrid.#ctor*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.#ctor
  href: ZLab.Discrete.Grids.OccupancyGrid.-ctor.html#ZLab_Discrete_Grids_OccupancyGrid__ctor_System_Numerics_Vector3_ZLab_Discrete_Geometry_BBox_
  name: OccupancyGrid
  nameWithType: OccupancyGrid.OccupancyGrid
  fullName: ZLab.Discrete.Grids.OccupancyGrid.OccupancyGrid
  nameWithType.vb: OccupancyGrid.New
  fullName.vb: ZLab.Discrete.Grids.OccupancyGrid.New
  name.vb: New
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: ZLab.Discrete.Geometry.BBox
  commentId: T:ZLab.Discrete.Geometry.BBox
  parent: ZLab.Discrete.Geometry
  href: ZLab.Discrete.Geometry.BBox.html
  name: BBox
  nameWithType: BBox
  fullName: ZLab.Discrete.Geometry.BBox
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: ZLab.Discrete.Geometry
  commentId: N:ZLab.Discrete.Geometry
  href: ZLab.html
  name: ZLab.Discrete.Geometry
  nameWithType: ZLab.Discrete.Geometry
  fullName: ZLab.Discrete.Geometry
  spec.csharp:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Geometry
    name: Geometry
    href: ZLab.Discrete.Geometry.html
  spec.vb:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Geometry
    name: Geometry
    href: ZLab.Discrete.Geometry.html
- uid: ZLab.Discrete.Grids.GridMeta
  commentId: T:ZLab.Discrete.Grids.GridMeta
  parent: ZLab.Discrete.Grids
  href: ZLab.Discrete.Grids.GridMeta.html
  name: GridMeta
  nameWithType: GridMeta
  fullName: ZLab.Discrete.Grids.GridMeta
- uid: ZLab.Discrete.Voxels.Occupancy[]
  isExternal: true
  href: ZLab.Discrete.Voxels.Occupancy.html
  name: Occupancy[]
  nameWithType: Occupancy[]
  fullName: ZLab.Discrete.Voxels.Occupancy[]
  nameWithType.vb: Occupancy()
  fullName.vb: ZLab.Discrete.Voxels.Occupancy()
  name.vb: Occupancy()
  spec.csharp:
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: (
  - name: )
- uid: System.Numerics.Vector3[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: System.Numerics.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: System.Numerics.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: (
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.Clone*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.Clone
  href: ZLab.Discrete.Grids.OccupancyGrid.Clone.html#ZLab_Discrete_Grids_OccupancyGrid_Clone
  name: Clone
  nameWithType: OccupancyGrid.Clone
  fullName: ZLab.Discrete.Grids.OccupancyGrid.Clone
- uid: ZLab.Discrete.Grids.OccupancyGrid
  commentId: T:ZLab.Discrete.Grids.OccupancyGrid
  parent: ZLab.Discrete.Grids
  href: ZLab.Discrete.Grids.OccupancyGrid.html
  name: OccupancyGrid
  nameWithType: OccupancyGrid
  fullName: ZLab.Discrete.Grids.OccupancyGrid
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetValue*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.GetValue
  href: ZLab.Discrete.Grids.OccupancyGrid.GetValue.html#ZLab_Discrete_Grids_OccupancyGrid_GetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  name: GetValue
  nameWithType: OccupancyGrid.GetValue
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetValue
- uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  parent: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}
  definition: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  name: GetValue((int x, int y, int z))
  nameWithType: IGrid<Occupancy>.GetValue((int x, int y, int z))
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<ZLab.Discrete.Voxels.Occupancy>.GetValue((int x, int y, int z))
  nameWithType.vb: IGrid(Of Occupancy).GetValue((x As Integer, y As Integer, z As Integer))
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of ZLab.Discrete.Voxels.Occupancy).GetValue((x As Integer, y As Integer, z As Integer))
  name.vb: GetValue((x As Integer, y As Integer, z As Integer))
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
    name: GetValue
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  - name: (
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: )
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
    name: GetValue
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  - name: (
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int x, int y, int z)
  nameWithType: (int x, int y, int z)
  fullName: (int x, int y, int z)
  nameWithType.vb: (x As Integer, y As Integer, z As Integer)
  fullName.vb: (x As Integer, y As Integer, z As Integer)
  name.vb: (x As Integer, y As Integer, z As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ZLab.Discrete.Voxels.Occupancy
  commentId: T:ZLab.Discrete.Voxels.Occupancy
  parent: ZLab.Discrete.Voxels
  href: ZLab.Discrete.Voxels.Occupancy.html
  name: Occupancy
  nameWithType: Occupancy
  fullName: ZLab.Discrete.Voxels.Occupancy
- uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid`1.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
  isExternal: true
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  name: GetValue((int x, int y, int z))
  nameWithType: IGrid<T>.GetValue((int x, int y, int z))
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<T>.GetValue((int x, int y, int z))
  nameWithType.vb: IGrid(Of T).GetValue((x As Integer, y As Integer, z As Integer))
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of T).GetValue((x As Integer, y As Integer, z As Integer))
  name.vb: GetValue((x As Integer, y As Integer, z As Integer))
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
    name: GetValue
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  - name: (
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: )
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32})
    name: GetValue
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32__
  - name: (
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: ZLab.Discrete.Voxels
  commentId: N:ZLab.Discrete.Voxels
  href: ZLab.html
  name: ZLab.Discrete.Voxels
  nameWithType: ZLab.Discrete.Voxels
  fullName: ZLab.Discrete.Voxels
  spec.csharp:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Voxels
    name: Voxels
    href: ZLab.Discrete.Voxels.html
  spec.vb:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Voxels
    name: Voxels
    href: ZLab.Discrete.Voxels.html
- uid: ZLab.Discrete.Grids.OccupancyGrid.SetValue*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.SetValue
  href: ZLab.Discrete.Grids.OccupancyGrid.SetValue.html#ZLab_Discrete_Grids_OccupancyGrid_SetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32__ZLab_Discrete_Voxels_Occupancy_
  name: SetValue
  nameWithType: OccupancyGrid.SetValue
  fullName: ZLab.Discrete.Grids.OccupancyGrid.SetValue
- uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
  parent: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}
  definition: ZLab.Discrete.Grids.Interfaces.IGrid`1.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},`0)
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.SetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_SetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32___0_
  name: SetValue((int x, int y, int z), Occupancy)
  nameWithType: IGrid<Occupancy>.SetValue((int x, int y, int z), Occupancy)
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<ZLab.Discrete.Voxels.Occupancy>.SetValue((int x, int y, int z), ZLab.Discrete.Voxels.Occupancy)
  nameWithType.vb: IGrid(Of Occupancy).SetValue((x As Integer, y As Integer, z As Integer), Occupancy)
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of ZLab.Discrete.Voxels.Occupancy).SetValue((x As Integer, y As Integer, z As Integer), ZLab.Discrete.Voxels.Occupancy)
  name.vb: SetValue((x As Integer, y As Integer, z As Integer), Occupancy)
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
    name: SetValue
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.SetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_SetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32___0_
  - name: (
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: )
  - name: ','
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},ZLab.Discrete.Voxels.Occupancy)
    name: SetValue
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.SetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_SetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32___0_
  - name: (
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: )
- uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},`0)
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid`1.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},`0)
  isExternal: true
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.SetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_SetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32___0_
  name: SetValue((int x, int y, int z), T)
  nameWithType: IGrid<T>.SetValue((int x, int y, int z), T)
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<T>.SetValue((int x, int y, int z), T)
  nameWithType.vb: IGrid(Of T).SetValue((x As Integer, y As Integer, z As Integer), T)
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of T).SetValue((x As Integer, y As Integer, z As Integer), T)
  name.vb: SetValue((x As Integer, y As Integer, z As Integer), T)
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},`0)
    name: SetValue
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.SetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_SetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32___0_
  - name: (
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.SetValue(System.ValueTuple{System.Int32,System.Int32,System.Int32},`0)
    name: SetValue
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.SetValue.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_SetValue_System_ValueTuple_System_Int32_System_Int32_System_Int32___0_
  - name: (
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer
  href: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer.html#ZLab_Discrete_Grids_OccupancyGrid_GetReadOnlyBuffer
  name: GetReadOnlyBuffer
  nameWithType: OccupancyGrid.GetReadOnlyBuffer
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyBuffer
- uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyBuffer
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyBuffer
  parent: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}
  definition: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyBuffer
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyBuffer
  name: GetReadOnlyBuffer()
  nameWithType: IGrid<Occupancy>.GetReadOnlyBuffer()
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<ZLab.Discrete.Voxels.Occupancy>.GetReadOnlyBuffer()
  nameWithType.vb: IGrid(Of Occupancy).GetReadOnlyBuffer()
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of ZLab.Discrete.Voxels.Occupancy).GetReadOnlyBuffer()
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyBuffer
    name: GetReadOnlyBuffer
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyBuffer
  - name: (
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyBuffer
    name: GetReadOnlyBuffer
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyBuffer
  - name: (
  - name: )
- uid: System.ReadOnlySpan{ZLab.Discrete.Voxels.Occupancy}
  commentId: T:System.ReadOnlySpan{ZLab.Discrete.Voxels.Occupancy}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<Occupancy>
  nameWithType: ReadOnlySpan<Occupancy>
  fullName: System.ReadOnlySpan<ZLab.Discrete.Voxels.Occupancy>
  nameWithType.vb: ReadOnlySpan(Of Occupancy)
  fullName.vb: System.ReadOnlySpan(Of ZLab.Discrete.Voxels.Occupancy)
  name.vb: ReadOnlySpan(Of Occupancy)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: )
- uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyBuffer
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyBuffer
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyBuffer
  name: GetReadOnlyBuffer()
  nameWithType: IGrid<T>.GetReadOnlyBuffer()
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<T>.GetReadOnlyBuffer()
  nameWithType.vb: IGrid(Of T).GetReadOnlyBuffer()
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of T).GetReadOnlyBuffer()
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyBuffer
    name: GetReadOnlyBuffer
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyBuffer
  - name: (
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyBuffer
    name: GetReadOnlyBuffer
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyBuffer
  - name: (
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory
  href: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory.html#ZLab_Discrete_Grids_OccupancyGrid_GetReadOnlyMemory
  name: GetReadOnlyMemory
  nameWithType: OccupancyGrid.GetReadOnlyMemory
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetReadOnlyMemory
- uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyMemory
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyMemory
  parent: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}
  definition: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyMemory
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyMemory.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyMemory
  name: GetReadOnlyMemory()
  nameWithType: IGrid<Occupancy>.GetReadOnlyMemory()
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<ZLab.Discrete.Voxels.Occupancy>.GetReadOnlyMemory()
  nameWithType.vb: IGrid(Of Occupancy).GetReadOnlyMemory()
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of ZLab.Discrete.Voxels.Occupancy).GetReadOnlyMemory()
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyMemory
    name: GetReadOnlyMemory
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyMemory.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyMemory
  - name: (
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetReadOnlyMemory
    name: GetReadOnlyMemory
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyMemory.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyMemory
  - name: (
  - name: )
- uid: System.ReadOnlyMemory{ZLab.Discrete.Voxels.Occupancy}
  commentId: T:System.ReadOnlyMemory{ZLab.Discrete.Voxels.Occupancy}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<Occupancy>
  nameWithType: ReadOnlyMemory<Occupancy>
  fullName: System.ReadOnlyMemory<ZLab.Discrete.Voxels.Occupancy>
  nameWithType.vb: ReadOnlyMemory(Of Occupancy)
  fullName.vb: System.ReadOnlyMemory(Of ZLab.Discrete.Voxels.Occupancy)
  name.vb: ReadOnlyMemory(Of Occupancy)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: )
- uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyMemory
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyMemory
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyMemory.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyMemory
  name: GetReadOnlyMemory()
  nameWithType: IGrid<T>.GetReadOnlyMemory()
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<T>.GetReadOnlyMemory()
  nameWithType.vb: IGrid(Of T).GetReadOnlyMemory()
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of T).GetReadOnlyMemory()
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyMemory
    name: GetReadOnlyMemory
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyMemory.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyMemory
  - name: (
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetReadOnlyMemory
    name: GetReadOnlyMemory
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetReadOnlyMemory.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetReadOnlyMemory
  - name: (
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetBuffer*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.GetBuffer
  href: ZLab.Discrete.Grids.OccupancyGrid.GetBuffer.html#ZLab_Discrete_Grids_OccupancyGrid_GetBuffer
  name: GetBuffer
  nameWithType: OccupancyGrid.GetBuffer
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetBuffer
- uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetBuffer
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetBuffer
  parent: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}
  definition: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetBuffer
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetBuffer
  name: GetBuffer()
  nameWithType: IGrid<Occupancy>.GetBuffer()
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<ZLab.Discrete.Voxels.Occupancy>.GetBuffer()
  nameWithType.vb: IGrid(Of Occupancy).GetBuffer()
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of ZLab.Discrete.Voxels.Occupancy).GetBuffer()
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetBuffer
    name: GetBuffer
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetBuffer
  - name: (
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid{ZLab.Discrete.Voxels.Occupancy}.GetBuffer
    name: GetBuffer
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetBuffer
  - name: (
  - name: )
- uid: System.Span{ZLab.Discrete.Voxels.Occupancy}
  commentId: T:System.Span{ZLab.Discrete.Voxels.Occupancy}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Occupancy>
  nameWithType: Span<Occupancy>
  fullName: System.Span<ZLab.Discrete.Voxels.Occupancy>
  nameWithType.vb: Span(Of Occupancy)
  fullName.vb: System.Span(Of ZLab.Discrete.Voxels.Occupancy)
  name.vb: Span(Of Occupancy)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: )
- uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetBuffer
  commentId: M:ZLab.Discrete.Grids.Interfaces.IGrid`1.GetBuffer
  href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetBuffer
  name: GetBuffer()
  nameWithType: IGrid<T>.GetBuffer()
  fullName: ZLab.Discrete.Grids.Interfaces.IGrid<T>.GetBuffer()
  nameWithType.vb: IGrid(Of T).GetBuffer()
  fullName.vb: ZLab.Discrete.Grids.Interfaces.IGrid(Of T).GetBuffer()
  spec.csharp:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetBuffer
    name: GetBuffer
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetBuffer
  - name: (
  - name: )
  spec.vb:
  - uid: ZLab.Discrete.Grids.Interfaces.IGrid`1.GetBuffer
    name: GetBuffer
    href: ZLab.Discrete.Grids.Interfaces.IGrid-1.GetBuffer.html#ZLab_Discrete_Grids_Interfaces_IGrid_1_GetBuffer
  - name: (
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.Fill*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.Fill
  href: ZLab.Discrete.Grids.OccupancyGrid.Fill.html#ZLab_Discrete_Grids_OccupancyGrid_Fill_ZLab_Discrete_Voxels_Occupancy_
  name: Fill
  nameWithType: OccupancyGrid.Fill
  fullName: ZLab.Discrete.Grids.OccupancyGrid.Fill
- uid: ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray
  href: ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray.html#ZLab_Discrete_Grids_OccupancyGrid_LoadFromArray_System_ReadOnlySpan_ZLab_Discrete_Voxels_Occupancy__
  name: LoadFromArray
  nameWithType: OccupancyGrid.LoadFromArray
  fullName: ZLab.Discrete.Grids.OccupancyGrid.LoadFromArray
- uid: ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy
  href: ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy.html#ZLab_Discrete_Grids_OccupancyGrid_ToArrayCopy
  name: ToArrayCopy
  nameWithType: OccupancyGrid.ToArrayCopy
  fullName: ZLab.Discrete.Grids.OccupancyGrid.ToArrayCopy
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.ToString*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.ToString
  href: ZLab.Discrete.Grids.OccupancyGrid.ToString.html#ZLab_Discrete_Grids_OccupancyGrid_ToString
  name: ToString
  nameWithType: OccupancyGrid.ToString
  fullName: ZLab.Discrete.Grids.OccupancyGrid.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels
  href: ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels.html#ZLab_Discrete_Grids_OccupancyGrid_EnumerateVoxels
  name: EnumerateVoxels
  nameWithType: OccupancyGrid.EnumerateVoxels
  fullName: ZLab.Discrete.Grids.OccupancyGrid.EnumerateVoxels
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Vector3 position, Occupancy value)>
  nameWithType: IEnumerable<(Vector3 position, Occupancy value)>
  fullName: System.Collections.Generic.IEnumerable<(System.Numerics.Vector3 position, ZLab.Discrete.Voxels.Occupancy value)>
  nameWithType.vb: IEnumerable(Of (position As Vector3, value As Occupancy))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (position As System.Numerics.Vector3, value As ZLab.Discrete.Voxels.Occupancy))
  name.vb: IEnumerable(Of (position As Vector3, value As Occupancy))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: " "
  - uid: System.ValueTuple{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}.position
    name: position
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.numerics.vector3,zlab.discrete.voxels.occupancy-.position
  - name: ','
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: " "
  - uid: System.ValueTuple{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.numerics.vector3,zlab.discrete.voxels.occupancy-.value
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}.position
    name: position
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.numerics.vector3,zlab.discrete.voxels.occupancy-.position
  - name: " "
  - name: As
  - name: " "
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.numerics.vector3,zlab.discrete.voxels.occupancy-.value
  - name: " "
  - name: As
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel
  href: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel.html#ZLab_Discrete_Grids_OccupancyGrid_ForEachVoxel_System_Action_System_Numerics_Vector3_ZLab_Discrete_Voxels_Occupancy__
  name: ForEachVoxel
  nameWithType: OccupancyGrid.ForEachVoxel
  fullName: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxel
- uid: System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}
  commentId: T:System.Action{System.Numerics.Vector3,ZLab.Discrete.Voxels.Occupancy}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<Vector3, Occupancy>
  nameWithType: Action<Vector3, Occupancy>
  fullName: System.Action<System.Numerics.Vector3, ZLab.Discrete.Voxels.Occupancy>
  nameWithType.vb: Action(Of Vector3, Occupancy)
  fullName.vb: System.Action(Of System.Numerics.Vector3, ZLab.Discrete.Voxels.Occupancy)
  name.vb: Action(Of Vector3, Occupancy)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: ','
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: ','
  - name: " "
  - uid: ZLab.Discrete.Voxels.Occupancy
    name: Occupancy
    href: ZLab.Discrete.Voxels.Occupancy.html
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel
  href: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel.html#ZLab_Discrete_Grids_OccupancyGrid_ForEachVoxelParallel_System_Action_System_Numerics_Vector3_ZLab_Discrete_Voxels_Occupancy__System_Nullable_System_Int32__
  name: ForEachVoxelParallel
  nameWithType: OccupancyGrid.ForEachVoxelParallel
  fullName: ZLab.Discrete.Grids.OccupancyGrid.ForEachVoxelParallel
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.CountState*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.CountState
  href: ZLab.Discrete.Grids.OccupancyGrid.CountState.html#ZLab_Discrete_Grids_OccupancyGrid_CountState_ZLab_Discrete_Voxels_Occupancy_
  name: CountState
  nameWithType: OccupancyGrid.CountState
  fullName: ZLab.Discrete.Grids.OccupancyGrid.CountState
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.TransformWorld
  href: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld.html#ZLab_Discrete_Grids_OccupancyGrid_TransformWorld_System_Numerics_Vector3_
  name: TransformWorld
  nameWithType: OccupancyGrid.TransformWorld
  fullName: ZLab.Discrete.Grids.OccupancyGrid.TransformWorld
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary
  href: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary.html#ZLab_Discrete_Grids_OccupancyGrid_GetMaskTernary_System_Boolean_
  name: GetMaskTernary
  nameWithType: OccupancyGrid.GetMaskTernary
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetMaskTernary
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary*
  commentId: Overload:ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary
  href: ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary.html#ZLab_Discrete_Grids_OccupancyGrid_GetMaskBinary_System_Boolean_System_Boolean_
  name: GetMaskBinary
  nameWithType: OccupancyGrid.GetMaskBinary
  fullName: ZLab.Discrete.Grids.OccupancyGrid.GetMaskBinary
memberLayout: SeparatePages
