### YamlMime:ManagedReference
items:
- uid: ZLab.Discrete.Geometry.TriFace
  commentId: T:ZLab.Discrete.Geometry.TriFace
  id: TriFace
  parent: ZLab.Discrete.Geometry
  children:
  - ZLab.Discrete.Geometry.TriFace.#ctor(System.Int32,System.Int32,System.Int32)
  - ZLab.Discrete.Geometry.TriFace.A
  - ZLab.Discrete.Geometry.TriFace.B
  - ZLab.Discrete.Geometry.TriFace.C
  - ZLab.Discrete.Geometry.TriFace.Equals(System.Object)
  - ZLab.Discrete.Geometry.TriFace.Equals(ZLab.Discrete.Geometry.TriFace)
  - ZLab.Discrete.Geometry.TriFace.GetHashCode
  - ZLab.Discrete.Geometry.TriFace.IsValid
  - ZLab.Discrete.Geometry.TriFace.QueryVertices(System.Numerics.Vector3[],System.Numerics.Vector3@,System.Numerics.Vector3@,System.Numerics.Vector3@)
  - ZLab.Discrete.Geometry.TriFace.ToString
  - ZLab.Discrete.Geometry.TriFace.op_Equality(ZLab.Discrete.Geometry.TriFace,ZLab.Discrete.Geometry.TriFace)
  - ZLab.Discrete.Geometry.TriFace.op_Inequality(ZLab.Discrete.Geometry.TriFace,ZLab.Discrete.Geometry.TriFace)
  langs:
  - csharp
  - vb
  name: TriFace
  nameWithType: TriFace
  fullName: ZLab.Discrete.Geometry.TriFace
  type: Struct
  source:
    id: TriFace
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 8
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  summary: Triangle face defined by three vertex indices (int). (12 bytes)
  example: []
  syntax:
    content: public readonly struct TriFace
    content.vb: Public Structure TriFace
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ZLab.Discrete.Geometry.TriFace.A
  commentId: F:ZLab.Discrete.Geometry.TriFace.A
  id: A
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: A
  nameWithType: TriFace.A
  fullName: ZLab.Discrete.Geometry.TriFace.A
  type: Field
  source:
    id: A
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 13
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  summary: Index of the first vertex of the triangle.
  example: []
  syntax:
    content: public readonly int A
    return:
      type: System.Int32
    content.vb: Public ReadOnly A As Integer
- uid: ZLab.Discrete.Geometry.TriFace.B
  commentId: F:ZLab.Discrete.Geometry.TriFace.B
  id: B
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: B
  nameWithType: TriFace.B
  fullName: ZLab.Discrete.Geometry.TriFace.B
  type: Field
  source:
    id: B
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 17
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  summary: Index of the second vertex of the triangle.
  example: []
  syntax:
    content: public readonly int B
    return:
      type: System.Int32
    content.vb: Public ReadOnly B As Integer
- uid: ZLab.Discrete.Geometry.TriFace.C
  commentId: F:ZLab.Discrete.Geometry.TriFace.C
  id: C
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: C
  nameWithType: TriFace.C
  fullName: ZLab.Discrete.Geometry.TriFace.C
  type: Field
  source:
    id: C
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 21
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  summary: Index of the third vertex of the triangle.
  example: []
  syntax:
    content: public readonly int C
    return:
      type: System.Int32
    content.vb: Public ReadOnly C As Integer
- uid: ZLab.Discrete.Geometry.TriFace.IsValid
  commentId: P:ZLab.Discrete.Geometry.TriFace.IsValid
  id: IsValid
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: TriFace.IsValid
  fullName: ZLab.Discrete.Geometry.TriFace.IsValid
  type: Property
  source:
    id: IsValid
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 23
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: ZLab.Discrete.Geometry.TriFace.IsValid*
- uid: ZLab.Discrete.Geometry.TriFace.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:ZLab.Discrete.Geometry.TriFace.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: TriFace(int, int, int)
  nameWithType: TriFace.TriFace(int, int, int)
  fullName: ZLab.Discrete.Geometry.TriFace.TriFace(int, int, int)
  type: Constructor
  source:
    id: .ctor
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 25
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  syntax:
    content: public TriFace(int a, int b, int c)
    parameters:
    - id: a
      type: System.Int32
    - id: b
      type: System.Int32
    - id: c
      type: System.Int32
    content.vb: Public Sub New(a As Integer, b As Integer, c As Integer)
  overload: ZLab.Discrete.Geometry.TriFace.#ctor*
  nameWithType.vb: TriFace.New(Integer, Integer, Integer)
  fullName.vb: ZLab.Discrete.Geometry.TriFace.New(Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer)
- uid: ZLab.Discrete.Geometry.TriFace.QueryVertices(System.Numerics.Vector3[],System.Numerics.Vector3@,System.Numerics.Vector3@,System.Numerics.Vector3@)
  commentId: M:ZLab.Discrete.Geometry.TriFace.QueryVertices(System.Numerics.Vector3[],System.Numerics.Vector3@,System.Numerics.Vector3@,System.Numerics.Vector3@)
  id: QueryVertices(System.Numerics.Vector3[],System.Numerics.Vector3@,System.Numerics.Vector3@,System.Numerics.Vector3@)
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: QueryVertices(Vector3[], out Vector3, out Vector3, out Vector3)
  nameWithType: TriFace.QueryVertices(Vector3[], out Vector3, out Vector3, out Vector3)
  fullName: ZLab.Discrete.Geometry.TriFace.QueryVertices(System.Numerics.Vector3[], out System.Numerics.Vector3, out System.Numerics.Vector3, out System.Numerics.Vector3)
  type: Method
  source:
    id: QueryVertices
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 40
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  summary: Fetches the vertex positions from the provided vertex array.
  example: []
  syntax:
    content: public void QueryVertices(Vector3[] vertices, out Vector3 v0, out Vector3 v1, out Vector3 v2)
    parameters:
    - id: vertices
      type: System.Numerics.Vector3[]
      description: Input vertices array from v0
    - id: v0
      type: System.Numerics.Vector3
    - id: v1
      type: System.Numerics.Vector3
      description: Output of first vertex
    - id: v2
      type: System.Numerics.Vector3
      description: Output of second vertex
    content.vb: Public Sub QueryVertices(vertices As Vector3(), v0 As Vector3, v1 As Vector3, v2 As Vector3)
  overload: ZLab.Discrete.Geometry.TriFace.QueryVertices*
  nameWithType.vb: TriFace.QueryVertices(Vector3(), Vector3, Vector3, Vector3)
  fullName.vb: ZLab.Discrete.Geometry.TriFace.QueryVertices(System.Numerics.Vector3(), System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)
  name.vb: QueryVertices(Vector3(), Vector3, Vector3, Vector3)
- uid: ZLab.Discrete.Geometry.TriFace.Equals(ZLab.Discrete.Geometry.TriFace)
  commentId: M:ZLab.Discrete.Geometry.TriFace.Equals(ZLab.Discrete.Geometry.TriFace)
  id: Equals(ZLab.Discrete.Geometry.TriFace)
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: Equals(TriFace)
  nameWithType: TriFace.Equals(TriFace)
  fullName: ZLab.Discrete.Geometry.TriFace.Equals(ZLab.Discrete.Geometry.TriFace)
  type: Method
  source:
    id: Equals
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 48
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  syntax:
    content: public bool Equals(TriFace other)
    parameters:
    - id: other
      type: ZLab.Discrete.Geometry.TriFace
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As TriFace) As Boolean
  overload: ZLab.Discrete.Geometry.TriFace.Equals*
- uid: ZLab.Discrete.Geometry.TriFace.Equals(System.Object)
  commentId: M:ZLab.Discrete.Geometry.TriFace.Equals(System.Object)
  id: Equals(System.Object)
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: TriFace.Equals(object?)
  fullName: ZLab.Discrete.Geometry.TriFace.Equals(object?)
  type: Method
  source:
    id: Equals
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 50
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: ZLab.Discrete.Geometry.TriFace.Equals*
  nameWithType.vb: TriFace.Equals(Object)
  fullName.vb: ZLab.Discrete.Geometry.TriFace.Equals(Object)
  name.vb: Equals(Object)
- uid: ZLab.Discrete.Geometry.TriFace.GetHashCode
  commentId: M:ZLab.Discrete.Geometry.TriFace.GetHashCode
  id: GetHashCode
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TriFace.GetHashCode()
  fullName: ZLab.Discrete.Geometry.TriFace.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 51
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: ZLab.Discrete.Geometry.TriFace.GetHashCode*
- uid: ZLab.Discrete.Geometry.TriFace.op_Equality(ZLab.Discrete.Geometry.TriFace,ZLab.Discrete.Geometry.TriFace)
  commentId: M:ZLab.Discrete.Geometry.TriFace.op_Equality(ZLab.Discrete.Geometry.TriFace,ZLab.Discrete.Geometry.TriFace)
  id: op_Equality(ZLab.Discrete.Geometry.TriFace,ZLab.Discrete.Geometry.TriFace)
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: operator ==(TriFace, TriFace)
  nameWithType: TriFace.operator ==(TriFace, TriFace)
  fullName: ZLab.Discrete.Geometry.TriFace.operator ==(ZLab.Discrete.Geometry.TriFace, ZLab.Discrete.Geometry.TriFace)
  type: Operator
  source:
    id: op_Equality
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 62
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  syntax:
    content: public static bool operator ==(TriFace left, TriFace right)
    parameters:
    - id: left
      type: ZLab.Discrete.Geometry.TriFace
    - id: right
      type: ZLab.Discrete.Geometry.TriFace
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As TriFace, right As TriFace) As Boolean
  overload: ZLab.Discrete.Geometry.TriFace.op_Equality*
  nameWithType.vb: TriFace.=(TriFace, TriFace)
  fullName.vb: ZLab.Discrete.Geometry.TriFace.=(ZLab.Discrete.Geometry.TriFace, ZLab.Discrete.Geometry.TriFace)
  name.vb: =(TriFace, TriFace)
- uid: ZLab.Discrete.Geometry.TriFace.op_Inequality(ZLab.Discrete.Geometry.TriFace,ZLab.Discrete.Geometry.TriFace)
  commentId: M:ZLab.Discrete.Geometry.TriFace.op_Inequality(ZLab.Discrete.Geometry.TriFace,ZLab.Discrete.Geometry.TriFace)
  id: op_Inequality(ZLab.Discrete.Geometry.TriFace,ZLab.Discrete.Geometry.TriFace)
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: operator !=(TriFace, TriFace)
  nameWithType: TriFace.operator !=(TriFace, TriFace)
  fullName: ZLab.Discrete.Geometry.TriFace.operator !=(ZLab.Discrete.Geometry.TriFace, ZLab.Discrete.Geometry.TriFace)
  type: Operator
  source:
    id: op_Inequality
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 63
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  syntax:
    content: public static bool operator !=(TriFace left, TriFace right)
    parameters:
    - id: left
      type: ZLab.Discrete.Geometry.TriFace
    - id: right
      type: ZLab.Discrete.Geometry.TriFace
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As TriFace, right As TriFace) As Boolean
  overload: ZLab.Discrete.Geometry.TriFace.op_Inequality*
  nameWithType.vb: TriFace.<>(TriFace, TriFace)
  fullName.vb: ZLab.Discrete.Geometry.TriFace.<>(ZLab.Discrete.Geometry.TriFace, ZLab.Discrete.Geometry.TriFace)
  name.vb: <>(TriFace, TriFace)
- uid: ZLab.Discrete.Geometry.TriFace.ToString
  commentId: M:ZLab.Discrete.Geometry.TriFace.ToString
  id: ToString
  parent: ZLab.Discrete.Geometry.TriFace
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TriFace.ToString()
  fullName: ZLab.Discrete.Geometry.TriFace.ToString()
  type: Method
  source:
    id: ToString
    path: F:\projects\Zlab.Discrete.Gh\ZLab.Discrete\ZLab.Discrete\Geometry\TriFace.cs
    startLine: 65
  assemblies:
  - ZLab.Discrete
  namespace: ZLab.Discrete.Geometry
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: ZLab.Discrete.Geometry.TriFace.ToString*
references:
- uid: ZLab.Discrete.Geometry
  commentId: N:ZLab.Discrete.Geometry
  href: ZLab.html
  name: ZLab.Discrete.Geometry
  nameWithType: ZLab.Discrete.Geometry
  fullName: ZLab.Discrete.Geometry
  spec.csharp:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Geometry
    name: Geometry
    href: ZLab.Discrete.Geometry.html
  spec.vb:
  - uid: ZLab
    name: ZLab
    href: ZLab.html
  - name: .
  - uid: ZLab.Discrete
    name: Discrete
    href: ZLab.Discrete.html
  - name: .
  - uid: ZLab.Discrete.Geometry
    name: Geometry
    href: ZLab.Discrete.Geometry.html
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ZLab.Discrete.Geometry.TriFace.IsValid*
  commentId: Overload:ZLab.Discrete.Geometry.TriFace.IsValid
  href: ZLab.Discrete.Geometry.TriFace.IsValid.html#ZLab_Discrete_Geometry_TriFace_IsValid
  name: IsValid
  nameWithType: TriFace.IsValid
  fullName: ZLab.Discrete.Geometry.TriFace.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ZLab.Discrete.Geometry.TriFace.#ctor*
  commentId: Overload:ZLab.Discrete.Geometry.TriFace.#ctor
  href: ZLab.Discrete.Geometry.TriFace.-ctor.html#ZLab_Discrete_Geometry_TriFace__ctor_System_Int32_System_Int32_System_Int32_
  name: TriFace
  nameWithType: TriFace.TriFace
  fullName: ZLab.Discrete.Geometry.TriFace.TriFace
  nameWithType.vb: TriFace.New
  fullName.vb: ZLab.Discrete.Geometry.TriFace.New
  name.vb: New
- uid: ZLab.Discrete.Geometry.TriFace.QueryVertices*
  commentId: Overload:ZLab.Discrete.Geometry.TriFace.QueryVertices
  href: ZLab.Discrete.Geometry.TriFace.QueryVertices.html#ZLab_Discrete_Geometry_TriFace_QueryVertices_System_Numerics_Vector3___System_Numerics_Vector3__System_Numerics_Vector3__System_Numerics_Vector3__
  name: QueryVertices
  nameWithType: TriFace.QueryVertices
  fullName: ZLab.Discrete.Geometry.TriFace.QueryVertices
- uid: System.Numerics.Vector3[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: System.Numerics.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: System.Numerics.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Numerics.Vector3
    name: Vector3
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  - name: (
  - name: )
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: ZLab.Discrete.Geometry.TriFace.Equals*
  commentId: Overload:ZLab.Discrete.Geometry.TriFace.Equals
  href: ZLab.Discrete.Geometry.TriFace.Equals.html#ZLab_Discrete_Geometry_TriFace_Equals_ZLab_Discrete_Geometry_TriFace_
  name: Equals
  nameWithType: TriFace.Equals
  fullName: ZLab.Discrete.Geometry.TriFace.Equals
- uid: ZLab.Discrete.Geometry.TriFace
  commentId: T:ZLab.Discrete.Geometry.TriFace
  parent: ZLab.Discrete.Geometry
  href: ZLab.Discrete.Geometry.TriFace.html
  name: TriFace
  nameWithType: TriFace
  fullName: ZLab.Discrete.Geometry.TriFace
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: ZLab.Discrete.Geometry.TriFace.GetHashCode*
  commentId: Overload:ZLab.Discrete.Geometry.TriFace.GetHashCode
  href: ZLab.Discrete.Geometry.TriFace.GetHashCode.html#ZLab_Discrete_Geometry_TriFace_GetHashCode
  name: GetHashCode
  nameWithType: TriFace.GetHashCode
  fullName: ZLab.Discrete.Geometry.TriFace.GetHashCode
- uid: ZLab.Discrete.Geometry.TriFace.op_Equality*
  commentId: Overload:ZLab.Discrete.Geometry.TriFace.op_Equality
  href: ZLab.Discrete.Geometry.TriFace.op_Equality.html#ZLab_Discrete_Geometry_TriFace_op_Equality_ZLab_Discrete_Geometry_TriFace_ZLab_Discrete_Geometry_TriFace_
  name: operator ==
  nameWithType: TriFace.operator ==
  fullName: ZLab.Discrete.Geometry.TriFace.operator ==
  nameWithType.vb: TriFace.=
  fullName.vb: ZLab.Discrete.Geometry.TriFace.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ZLab.Discrete.Geometry.TriFace.op_Equality*
    name: ==
    href: ZLab.Discrete.Geometry.TriFace.op_Equality.html#ZLab_Discrete_Geometry_TriFace_op_Equality_ZLab_Discrete_Geometry_TriFace_ZLab_Discrete_Geometry_TriFace_
- uid: ZLab.Discrete.Geometry.TriFace.op_Inequality*
  commentId: Overload:ZLab.Discrete.Geometry.TriFace.op_Inequality
  href: ZLab.Discrete.Geometry.TriFace.op_Inequality.html#ZLab_Discrete_Geometry_TriFace_op_Inequality_ZLab_Discrete_Geometry_TriFace_ZLab_Discrete_Geometry_TriFace_
  name: operator !=
  nameWithType: TriFace.operator !=
  fullName: ZLab.Discrete.Geometry.TriFace.operator !=
  nameWithType.vb: TriFace.<>
  fullName.vb: ZLab.Discrete.Geometry.TriFace.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ZLab.Discrete.Geometry.TriFace.op_Inequality*
    name: '!='
    href: ZLab.Discrete.Geometry.TriFace.op_Inequality.html#ZLab_Discrete_Geometry_TriFace_op_Inequality_ZLab_Discrete_Geometry_TriFace_ZLab_Discrete_Geometry_TriFace_
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: ZLab.Discrete.Geometry.TriFace.ToString*
  commentId: Overload:ZLab.Discrete.Geometry.TriFace.ToString
  href: ZLab.Discrete.Geometry.TriFace.ToString.html#ZLab_Discrete_Geometry_TriFace_ToString
  name: ToString
  nameWithType: TriFace.ToString
  fullName: ZLab.Discrete.Geometry.TriFace.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
memberLayout: SeparatePages
