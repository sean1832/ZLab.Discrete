name: Publish to GitHub Packages + NuGet.org

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.x
            8.x
            7.x

      - name: Compute version from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          $tag = $env:GITHUB_REF_NAME
          $version = $tag -replace '^v',''
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Pack
        run: |
          dotnet pack ZLab.Discrete/ZLab.Discrete.csproj `
            --configuration Release `
            --no-build `
            -p:PackageVersion=${{ env.VERSION }} `
            -p:Version=${{ env.VERSION }} `
            -p:ContinuousIntegrationBuild=true `
            -p:IncludeSymbols=true `
            -p:SymbolPackageFormat=snupkg `
            -p:RepositoryUrl=${{ github.server_url }}/${{ github.repository }} `
            -p:RepositoryCommit=${{ github.sha }} `
            --output ./nupkgs
        shell: pwsh

      - name: Add GitHub Packages source
        run: |
          dotnet nuget add source `
            "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" `
            --name "github" `
            --username "${{ github.actor }}" `
            --password "${{ secrets.GITHUB_TOKEN }}" `
            --store-password-in-clear-text
        shell: pwsh

      - name: Publish to GitHub Packages
        run: |
          dotnet nuget push "./nupkgs/*.nupkg" --source "github" --skip-duplicate
          dotnet nuget push "./nupkgs/*.snupkg" --source "github" --skip-duplicate
        shell: pwsh

      - name: Publish to NuGet.org
        run: |
          dotnet nuget push "./nupkgs/*.nupkg" --api-key "${{ secrets.NUGET_API_KEY }}" --source "https://api.nuget.org/v3/index.json" --skip-duplicate
          dotnet nuget push "./nupkgs/*.snupkg" --api-key "${{ secrets.NUGET_API_KEY }}" --source "https://api.nuget.org/v3/index.json" --skip-duplicate
        shell: pwsh

      - name: Attach packages to the GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            nupkgs/*.nupkg
            nupkgs/*.snupkg
